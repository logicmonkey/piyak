# Piyak - a program to monitor and log the effort on a kayak ergo.
#         Python on Raspberry Pi, with a user interface implemented
#         in Kivy. The program should run in a dummy "testmode" if the
#         Raspberry Pi pigpio library is not found. This allows it to
#         be run/tested/modified on a platform other than Raspberry Pi
#
# Copyright (c) 2017 Piers Barber
#
# This is free software released under the terms of the MIT licence
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

<Piyak>:
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            canvas.after:
                Rectangle:
                    source: 'images/lm_tacho_dial.png'
                    # centre the dial with a shift right
                    pos: [self.center[0]-self.height/2.0, self.y]
                    size: [self.height, self.height] # circular, not an ellipse
                PushMatrix
                Rotate:
                    angle: root.needle
                    origin: self.center
                Rectangle:
                    source: 'images/lm_tacho_needle.png'
                    # centre the dial with a shift right
                    pos: [self.center[0]-self.height/2.0, self.y]
                    size: [self.height, self.height] # circular, not an ellipse
                PopMatrix
        Label:
            id: i_power
            text: "[b]0.0[/b]W"
            font_size: 90
            markup: True
            color: [1, 0, 0, 1]
            size_hint_y: None
            height: 110
        Label:
            id: i_speed
            text: "[b]0.0[/b]km/h"
            font_size: 90
            markup: True
            color: [0, 0, 1, 1]
            size_hint_y: None
            height: 110
        Label:
            id: i_dist
            text: "[b]0[/b]m"
            font_size: 90
            markup: True
            color: [0, 1, 0, 1]
            size_hint_y: None
            height: 110

    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            canvas.after:
                Rectangle:
                    source: 'images/gerono_waikiki.png' # background image
                    pos: self.pos
                    size: self.size

                PushMatrix
                Translate: # position canvas origin at centre of current box
                    x: self.center[0]
                    y: self.center[1]
                Color:
                    rgba: [1,0,0,1]
                Line:      # all points are floats in the range [-1, 1] so scale up
                    points: [self.width/2.1*p for p in root.polyline[:-4]]
                    width: 2
                Color:
                    rgba: [1,1,0,1]
                Line:
                    points: [self.width/2.1*p for p in root.polyline[-4:]]
                    width: 4
                PopMatrix
        Label:
            id: i_stroke
            text: "0dpsm"
            font_size: 90
            markup: True
            color: [0.8, 0.8, 0.0, 1]
            size_hint_y: None
            height: 110
        Label:
            id: i_elapsed
            text: "00:00:00"
            font_size: 90
            color: [0.8, 0.8, 0.8, 1]
            size_hint_y: None
            height: 110
        BoxLayout:
            size_hint_y: None
            height: 110
            Button:
                id: i_reset
                text: '[b]RESET[/b]'
                markup: True
                font_size: 20
                on_release: root.reset_cbf()
            ToggleButton:
                id: i_playpause
                on_press: root.playpause_cbf()
                Image:
                    source: 'images/button_pause.png' if root.play_mode == 1 else 'images/button_play.png'
                    pos: i_playpause.pos
                    size: i_playpause.size
            Button:
                id: i_exit
                text: '[b]EXIT[/b]'
                markup: True
                font_size: 20
                on_release: root.exit_cbf()
